// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test_pb.proto

package testing

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Msg struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Msg) Reset()         { *m = Msg{} }
func (m *Msg) String() string { return proto.CompactTextString(m) }
func (*Msg) ProtoMessage()    {}
func (*Msg) Descriptor() ([]byte, []int) {
	return fileDescriptor_5dd40d5418da6aa5, []int{0}
}

func (m *Msg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Msg.Unmarshal(m, b)
}
func (m *Msg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Msg.Marshal(b, m, deterministic)
}
func (m *Msg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Msg.Merge(m, src)
}
func (m *Msg) XXX_Size() int {
	return xxx_messageInfo_Msg.Size(m)
}
func (m *Msg) XXX_DiscardUnknown() {
	xxx_messageInfo_Msg.DiscardUnknown(m)
}

var xxx_messageInfo_Msg proto.InternalMessageInfo

type Result struct {
	Role                 string   `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_5dd40d5418da6aa5, []int{1}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func init() {
	proto.RegisterType((*Msg)(nil), "testing.Msg")
	proto.RegisterType((*Result)(nil), "testing.Result")
}

func init() { proto.RegisterFile("test_pb.proto", fileDescriptor_5dd40d5418da6aa5) }

var fileDescriptor_5dd40d5418da6aa5 = []byte{
	// 125 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x49, 0x2d, 0x2e,
	0x89, 0x2f, 0x48, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x07, 0x71, 0x33, 0xf3, 0xd2,
	0x95, 0x58, 0xb9, 0x98, 0x7d, 0x8b, 0xd3, 0x95, 0x64, 0xb8, 0xd8, 0x82, 0x52, 0x8b, 0x4b, 0x73,
	0x4a, 0x84, 0x84, 0xb8, 0x58, 0x8a, 0xf2, 0x73, 0x52, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83,
	0xc0, 0x6c, 0x23, 0x33, 0x2e, 0x0e, 0xf7, 0xa2, 0x82, 0xe4, 0x90, 0xd4, 0xe2, 0x12, 0x21, 0x2d,
	0x2e, 0x76, 0xf7, 0xd4, 0x92, 0xa0, 0xfc, 0x9c, 0x54, 0x21, 0x1e, 0x3d, 0xa8, 0x29, 0x7a, 0xbe,
	0xc5, 0xe9, 0x52, 0xfc, 0x70, 0x1e, 0xc4, 0x24, 0x25, 0x86, 0x24, 0x36, 0xb0, 0x65, 0xc6, 0x80,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x7e, 0x84, 0x52, 0x93, 0x7d, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GrpcTestClient is the client API for GrpcTest service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcTestClient interface {
	GetRole(ctx context.Context, in *Msg, opts ...grpc.CallOption) (*Result, error)
}

type grpcTestClient struct {
	cc *grpc.ClientConn
}

func NewGrpcTestClient(cc *grpc.ClientConn) GrpcTestClient {
	return &grpcTestClient{cc}
}

func (c *grpcTestClient) GetRole(ctx context.Context, in *Msg, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/testing.GrpcTest/GetRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrpcTestServer is the server API for GrpcTest service.
type GrpcTestServer interface {
	GetRole(context.Context, *Msg) (*Result, error)
}

func RegisterGrpcTestServer(s *grpc.Server, srv GrpcTestServer) {
	s.RegisterService(&_GrpcTest_serviceDesc, srv)
}

func _GrpcTest_GetRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Msg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcTestServer).GetRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testing.GrpcTest/GetRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcTestServer).GetRole(ctx, req.(*Msg))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrpcTest_serviceDesc = grpc.ServiceDesc{
	ServiceName: "testing.GrpcTest",
	HandlerType: (*GrpcTestServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRole",
			Handler:    _GrpcTest_GetRole_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "test_pb.proto",
}
